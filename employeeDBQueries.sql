-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


DROP TABLE IF EXISTS public.employees;

CREATE TABLE IF NOT EXISTS public.employees
(
    emp_id bigserial,
    first_name character varying(20),
    last_name character(30),
    gender character varying(1),
    address character varying(100),
    email character varying(60),
    dept_id integer,
    role_id integer,
    salary_id integer,
    overtime_id integer,
    CONSTRAINT emp_key PRIMARY KEY (emp_id)
);

DROP TABLE IF EXISTS public.department;

CREATE TABLE IF NOT EXISTS public.department
(
    dept_id bigserial,
    dept_name character varying(20),
    dept_city character varying(20),
    CONSTRAINT dept_key PRIMARY KEY (dept_id)
);

DROP TABLE IF EXISTS public.roles;

CREATE TABLE IF NOT EXISTS public.roles
(
    role_id bigserial,
    role character varying(20),
    CONSTRAINT role_key PRIMARY KEY (role_id)
);

DROP TABLE IF EXISTS public.salaries;

CREATE TABLE IF NOT EXISTS public.salaries
(
    salary_id bigserial,
    salary_pa integer,
    PRIMARY KEY (salary_id)
);

DROP TABLE IF EXISTS public.overtime_hours;

CREATE TABLE IF NOT EXISTS public.overtime_hours
(
    overtime_id bigserial,
    overtime_hours integer,
    CONSTRAINT overtime_key PRIMARY KEY (overtime_id)
);

ALTER TABLE IF EXISTS public.employees
    ADD FOREIGN KEY (dept_id)
    REFERENCES public.department (dept_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employees
    ADD FOREIGN KEY (role_id)
    REFERENCES public.roles (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employees
    ADD FOREIGN KEY (salary_id)
    REFERENCES public.salaries (salary_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employees
    ADD FOREIGN KEY (overtime_id)
    REFERENCES public.overtime_hours (overtime_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;

INSERT INTO employees (
	first_name,
    last_name,
    gender,
    address,
    email,
    dept_id,
    role_id,
    salary_id,
    overtime_id
)
VALUES 
	('John', 'Doe', 'M', '12 Church Street, Hopefield', 'johndoe@gmail.com', 1, 2, 3, 4),
	('Jane', 'Smith', 'F', '23 Hope Street, Juniper Valley', 'janesmith@gmail.com', 2, 4, 2, 1),
	('Max', 'Anderson', 'M', '62 Dream Crescent, Flower Garden Estate', 'maxanderson@gmail.com', 3, 1, 2, 2),
	('Gary', 'Price', 'M', '35 Gold Street, Beverly Hills', 'garyprice@gmail.com', 4, 2, 3, 4);
	
	
INSERT INTO department (
	dept_name,
    dept_city
)
VALUES
	('Tax', 'New York'),
	('IT', 'Denver'),
	('Advertising', 'Chicago'),
	('Management', 'Orlando');
	
	
INSERT INTO roles (
	role
)
VALUES 
	('Manager'),
	('Coordinator'),
	('Consult'),
	('Assistant');
	

INSERT INTO salaries (
	salary_pa
)
VALUES
	(12000),
	(15000),
	(20000),
	(30000),
	(60000),
	(100000),
	(120000);
	
	
INSERT INTO overtime_hours (
	overtime_hours
)
VALUES 
	(1),
	(2),
	(3),
	(4),
	(5),
	(6);
	
	
SELECT * FROM employees;

INSERT INTO employees (
	first_name,
    last_name,
    gender,
    address,
    email,
    dept_id,
    role_id,
    salary_id,
    overtime_id
)
VALUES 
	('Gregory', 'Harrison', 'M', '26 James Drive', 'gregoryharrison@gmail.com', 4, 2, 6, 5);
	
SELECT * FROM 
	employees LEFT JOIN department 
		ON employees.dept_id = department.dept_id
	LEFT JOIN roles
		ON employees.role_id = roles.role_id
	LEFT JOIN salaries
		ON employees.salary_id = salaries.salary_id
	LEFT JOIN overtime_hours
		ON employees.overtime_id = overtime_hours.overtime_id
	ORDER BY employees.emp_id;
	